// Generated by CoffeeScript 1.10.0

/*
  單幣種資產賬戶
 */
var Capital, FundAccount,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

FundAccount = (function() {
  function FundAccount(賬號) {
    this.可售 = [];
    this.現有 = [];
    this.前持倉 = null;
    this.賬號 = 賬號;
    this.資產 = new Capital(賬號);
    this.前資產 = null;
    this.持倉 = null;
    this.比重上限 = 0.5;
  }

  FundAccount.prototype.最小分倉資金量 = function() {
    switch (this.資產.幣名) {
      case '人民币':
        return 20000;
      case '美元':
        return 3000;
      case '港币':
        return 20000;
      default:
        throw "未知貨幣" + this.資產.幣名;
    }
  };

  FundAccount.prototype.記錄資產 = function(value) {
    this.資產.華泰資產(value);
    if (this.前資產 == null) {
      this.前資產 = new Capital(this.賬號);
      return this.前資產.華泰資產(value);
    }
  };

  FundAccount.prototype.更新持倉 = function() {
    this.現有 = [];
    this.可售 = [];
    return this.持倉 = {};
  };


  /* 此處可對不同類型品種設置不同的止損比重率,
    或可在證券中設定,但每個賬戶的風險控制不同,故應因人制宜
   */

  FundAccount.prototype.更新品種 = function(品種, 總賬戶, callback) {
    var command, 代碼, 比重;
    代碼 = 品種.代碼;
    this.持倉[代碼] = 品種;
    if (品種.持倉股數 > 0) {
      this.現有.push(代碼);
      總賬戶.現有.push(代碼);
    }
    if (品種.可售股數 > 0) {
      this.可售.push(代碼);
      總賬戶.可售.push(代碼);
      if (品種.盈虧 < 0) {
        command = "sellIt," + 代碼 + "," + (this.求止損比重(代碼)) + "," + 品種.最近價;
        return callback(command);
      } else {
        比重 = this.應減倉比重(代碼);
        if (比重 > 0) {
          command = "sellIt," + 代碼 + "," + 比重 + "," + 品種.最近價;
          return callback(command);
        }
      }
    }
  };

  FundAccount.prototype.記錄前持倉 = function() {
    if (this.前持倉 == null) {
      return this.前持倉 = this.持倉;
    }
  };

  FundAccount.prototype.賣出評估 = function(obj) {
    var ref;
    if (ref = obj.代碼, indexOf.call(this.可售, ref) >= 0) {
      return obj;
    } else {
      return null;
    }
  };

  FundAccount.prototype.買入評估 = function(obj) {
    var ref, 額度;
    if (ref = obj.代碼, indexOf.call(this.現有, ref) >= 0) {
      額度 = Math.min(this.求剩餘額度(obj.代碼), obj.比重);
      if (額度 < 0) {
        return null;
      } else {
        obj.比重 = 額度;
        return obj;
      }
    } else {
      return obj;
    }
  };

  FundAccount.prototype.應減倉比重 = function(代碼, 均勻) {
    if (均勻 == null) {
      均勻 = false;
    }
    if (this.求資產總額() < this.最小分倉資金量()) {
      return 0;
    } else if (均勻) {
      console.error("fund.coffee>>應減倉比重 暫時勿用,尚待解決更新過程中品種數量不准問題.");
      return (this.求市值(代碼) / this.求資產總額()) - this.求均攤比重();
    } else {
      return (this.求市值(代碼) / this.求資產總額()) - this.比重上限;
    }
  };

  FundAccount.prototype.求止損比重 = function(代碼) {
    return 0.618;
  };

  FundAccount.prototype.求市值 = function(代碼) {
    return this.持倉[代碼].持倉市值;
  };

  FundAccount.prototype.求資產總額 = function() {
    return this.資產.資產總值;
  };

  FundAccount.prototype.求均攤比重 = function() {
    return 1 / this.現有.length;
  };

  FundAccount.prototype.求剩餘額度 = function(代碼, 均勻) {
    var 上限;
    if (均勻 == null) {
      均勻 = false;
    }
    上限 = 均勻 ? this.求均攤比重() : this.比重上限;
    return 上限 - (this.求市值(代碼) / this.求資產總額());
  };

  return FundAccount;

})();

Capital = (function() {
  function Capital(賬號1) {
    this.賬號 = 賬號1;
  }

  Capital.prototype.華泰資產 = function(value) {
    this.幣種 = value.money_type;
    this.資產總值 = value.TotalAsset;
    this.餘額 = value.current_balance;
    this.可用餘額 = value.AvailableFund;
    this.可取餘額 = value.fetch_balance;
    this.證券市值 = value.market_value;
    this.幣名 = value.money_name;
    return this;
  };

  return Capital;

})();

module.exports = FundAccount;

//# sourceMappingURL=fund.js.map
