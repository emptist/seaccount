// Generated by CoffeeScript 1.10.0
var ClientAccount, FundAccount, HSClientAccount, IBClientAccount, util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

util = require('util');

FundAccount = (function() {
  function FundAccount(幣種1) {
    this.幣種 = 幣種1;
  }

  return FundAccount;

})();

ClientAccount = (function() {
  function ClientAccount(broker, id, password) {
    this.broker = broker;
    this.id = id;
    this.password = password;
  }

  return ClientAccount;

})();

IBClientAccount = (function(superClass) {
  extend(IBClientAccount, superClass);

  function IBClientAccount() {
    return IBClientAccount.__super__.constructor.apply(this, arguments);
  }

  return IBClientAccount;

})(ClientAccount);


/* 注意:
  所有英文方法,多是兼容現有Python接口所需,將來會全部改為中文標準名詞
 */

HSClientAccount = (function(superClass) {
  extend(HSClientAccount, superClass);

  function HSClientAccount(broker, id, password, servicePassword) {
    this.broker = broker;
    this.id = id;
    this.password = password;
    this.servicePassword = servicePassword;
    this.求各幣資產 = bind(this.求各幣資產, this);
    this.現有 = [];
    this.可用 = [];
    this.資產 = null;
    this.持倉 = null;
    this.黑名單 = [];
    this.比重上限 = 0.5;
    this.最小分倉資金量 = 20000;
  }

  HSClientAccount.prototype.操作指令 = function(obj, 回執) {

    /*過濾操作指令
    
      回執
        obj: 操作指令string
      或
        null
     */
    var 額度;
    return 回執((function() {
      var ref, ref1, ref2;
      switch (obj.操作) {
        case 'cancelIt':
          return obj;
        case 'buyIt':

          /*
          須逐步實現以下買入控制:
            1. 排除黑名單
            1. 調整買入數量,令不超比例
            1. 檢查委託價格
            1. 回報成交狀態
           */
          if (ref = obj.代碼, indexOf.call(this.黑名單, ref) >= 0) {
            return null;
          } else if (ref1 = obj.代碼, indexOf.call(this.現有, ref1) >= 0) {
            額度 = Math.min(this.剩餘額度(obj.代碼), obj.比重);
            if (額度 < 0) {
              return null;
            } else {
              obj.比重 = 額度;
              return obj;
            }
          } else {
            return obj;
          }
          break;
        case 'sellIt':
          if (ref2 = obj.代碼, indexOf.call(this.可用, ref2) >= 0) {
            return obj;
          } else {
            return null;
          }
          break;
        default:
          return null;
      }
    }).call(this));
  };

  HSClientAccount.prototype.查詢簡況 = function(data, callback) {
    return this.查詢持倉(data, callback);
  };

  HSClientAccount.prototype.查詢持倉 = function(data, callback) {

    /*
      此處的 data 是從華泰Python接口讀入的,目前設置為格式:
    {
    '0':
     { index: 0,
       av_buy_price: 0.821,
       av_income_balance: 0,
       CostPrice: 0.893,
       SecurityAmount: 15200,
       SecurityAvail: 0,
       exchange_name: '深圳Ａ',
       exchange_type: '2',
       hand_flag: '0',
       Profit: 1059.61,
       income_balance_ratio: 7.81,
       keep_cost_price: 0.893,
       LastPrice: 0.963,
       HoldingValue: 14637.6,
       stock_account: '0097571759',
       SecurityCode: '150153',
       SecurityName: '创业板B',
       extra: 0.6629212514 },
    '1':
     { index: 1,
       av_buy_price: 1.951,
       av_income_balance: -40.15,
       CostPrice: 1.951,
       SecurityAmount: 0,
       SecurityAvail: 0,
       exchange_name: '深圳Ａ',
       exchange_type: '2',
       hand_flag: '0',
       Profit: 284.68,
       income_balance_ratio: 6.41,
       keep_cost_price: 1.951,
       LastPrice: 2.076,
       HoldingValue: 0,
       stock_account: '0097571759',
       SecurityCode: '159915',
       SecurityName: '创业板',
       extra: -0.3333333333 },
       ...}
     */
    var command, key, results, tick, 代碼, 可用數量, 比重, 浮動盈虧, 現有數量;
    this.現有 = [];
    this.可用 = [];
    this.持倉 = {};

    /* 此處可對不同類型品種設置不同的止損比重率,
      或可在證券中設定,但每個賬戶的風險控制不同,故應因人制宜
     */
    results = [];
    for (key in data) {
      tick = data[key];
      代碼 = tick.SecurityCode;
      可用數量 = tick.SecurityAvail;
      現有數量 = tick.SecurityAmount;
      浮動盈虧 = tick.Profit;
      this.持倉[代碼] = tick;
      if (現有數量 > 0) {
        this.現有.push(代碼);
      }
      if (可用數量 > 0) {
        this.可用.push(代碼);
        if (浮動盈虧 < 0) {
          command = "sellIt," + 代碼 + "," + (this.求止損比重(代碼)) + "," + tick.LastPrice;
          results.push(callback(command));
        } else {
          比重 = this.應減倉比重(代碼);
          if (比重 > 0) {
            command = "sellIt," + 代碼 + "," + 比重 + "," + tick.LastPrice;
            results.push(callback(command));
          } else {
            results.push(void 0);
          }
        }
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  HSClientAccount.prototype.查詢資產 = function(data, callback) {

    /*
      目前設計從華泰Python接口獲得數據為:
      { '0':
       { money_type: '0',
         TotalAsset: 14692.63,
         current_balance: 13.43,
         AvailableFund: 55.03,
         fetch_balance: 13.43,
         market_value: 14637.6,
         money_name: '人民币',
         rmb_value: 14692.63,
         rmb_total: 258804.344308,
         acc_id: 'htweb080300007199' },
      '1':
       { money_type: '1',
         TotalAsset: 37601.55,
         current_balance: 122.17,
         AvailableFund: 49.35,
         fetch_balance: 49.35,
         market_value: 37552.2,
         money_name: '美元',
         rmb_value: 243575.32059,
         rmb_total: 258804.344308,
         acc_id: 'htweb080300007199' },
      '2':
       { money_type: '2',
         TotalAsset: 639.63,
         current_balance: 127.63,
         AvailableFund: 127.63,
         fetch_balance: 127.63,
         market_value: 512,
         money_name: '港币',
         rmb_value: 536.393718,
         rmb_total: 258804.344308,
         acc_id: 'htweb080300007199' } }
     */
    this.資產 = data;
    return callback(data);
  };

  HSClientAccount.prototype.查可撤單 = function(data, callback) {
    util.log("got orders data", data);
    return callback(data);
  };

  HSClientAccount.prototype.求止損比重 = function(代碼) {
    return 0.618;
  };


  /* 查閱資產和持倉狀況,計算該證券比重,對照比重限額,回復是否超重
   */

  HSClientAccount.prototype.求各幣資產 = function(代碼) {
    var 幣種;
    幣種 = (function() {
      switch (代碼[0]) {
        case 9:
          return '1';
        case 2:
          return '2';
        default:
          return '0';
      }
    })();
    return this.資產[幣種];
  };

  HSClientAccount.prototype.求市值 = function(代碼) {
    return this.持倉[代碼].HoldingValue;
  };

  HSClientAccount.prototype.求總額 = function(代碼) {
    return this.求各幣資產(代碼).TotalAsset;
  };

  HSClientAccount.prototype.超重 = function(代碼) {
    return this.求市值(代碼) / this.求總額(代碼) > this.比重上限;
  };

  HSClientAccount.prototype.剩餘額度 = function(代碼) {
    return this.比重上限 - (this.求市值(代碼) / this.求總額(代碼));
  };

  HSClientAccount.prototype.應減倉比重 = function(代碼) {
    if (this.求各幣資產(代碼).rmb_value < this.最小分倉資金量) {
      return 0;
    } else {
      return ((this.求市值(代碼) / this.求總額(代碼)) / this.比重上限) - 1;
    }
  };

  return HSClientAccount;

})(ClientAccount);

module.exports = {
  HSClientAccount: HSClientAccount
};


/*
待完成
  求止損比重()
  超重()
 */

//# sourceMappingURL=account.js.map
