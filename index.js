// Generated by CoffeeScript 1.10.0
var ClientAccount, FundAccount, HSClientAccount, IBClientAccount, util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

util = require('util');

FundAccount = (function() {
  function FundAccount(幣種) {
    this.幣種 = 幣種;
  }

  return FundAccount;

})();

ClientAccount = (function() {
  function ClientAccount(broker, id, password) {
    this.broker = broker;
    this.id = id;
    this.password = password;
  }

  return ClientAccount;

})();

IBClientAccount = (function(superClass) {
  extend(IBClientAccount, superClass);

  function IBClientAccount() {
    return IBClientAccount.__super__.constructor.apply(this, arguments);
  }

  return IBClientAccount;

})(ClientAccount);


/* 注意:
  所有英文方法,多是兼容現有Python接口所需,將來會全部改為中文標準名詞
 */

HSClientAccount = (function(superClass) {
  extend(HSClientAccount, superClass);

  function HSClientAccount(broker, id, password, servicePassword) {
    this.broker = broker;
    this.id = id;
    this.password = password;
    this.servicePassword = servicePassword;
    this.可用 = [];
  }

  HSClientAccount.prototype.操作指令 = function(obj, 回應) {
    return 回應((function() {
      var ref;
      switch (obj.操作) {
        case 'cancelIt':
          return null;
        case 'buyIt':
          return obj;
        case 'sellIt':
          if (ref = obj.代碼, indexOf.call(this.可用, ref) >= 0) {
            return obj;
          } else {
            return null;
          }
          break;
        default:
          return null;
      }
    }).call(this));
  };

  HSClientAccount.prototype.最新簡況 = function(data, callback) {
    return this.最新持倉(data, callback);
  };

  HSClientAccount.prototype.最新持倉 = function(data, callback) {
    var code, command, key, results, tick, 比重;
    比重 = function(code) {
      return 0.618;
    };
    this.可用 = [];
    results = [];
    for (key in data) {
      tick = data[key];
      code = tick.SecurityCode;

      /*
        在@可用中存儲可用證券之代碼
        更新數據庫中的品種代碼表還需要嗎?
       */
      if (tick.SecurityAmount > 0) {
        this.可用.push(code);
        if (tick.Profit < 0) {
          command = "sellIt," + code + "," + (比重(code)) + "," + tick.LastPrice;
          results.push(callback(command));
        } else {
          results.push(void 0);
        }
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  HSClientAccount.prototype.最新資產 = function(data, callback) {
    return util.log("got funds data");
  };

  HSClientAccount.prototype.可撤單 = function(data, callback) {
    return util.log("got orders data");
  };

  return HSClientAccount;

})(ClientAccount);

module.exports = {
  HSClientAccount: HSClientAccount
};

//# sourceMappingURL=index.js.map
